<%
--[[
    items               (tbl) Items to show.
    data >>
    .title              (str) Grid title. Default: none.
    .page_number        (num) Current page.
    .class              (str) CSS class.
    .item_type          (str) item template name at views/partials/[item_type].
    .items_per_row      (num) Number of items per grid row. Default: 5.
    .items_per_page     (num) Number of items per page. Default: 5.
    .with_search        (t/f) Adds a search input. Default: false.
    .show_if_empty      (t/f) Show component if no items. Default: false.
    .filters            (tbl) Dropdown menu filter descriptors:
        .label          (str) Dropdown label.
        .options        (tbl) Dropdown options.
            .label      (str) Option label.
            .value      (any) Option value.
    .show_author        (t/f) Show the item author, if any. Default: false.
    .show_icons         (t/f) Show item privacy icons. Default: false.
    .show_collection_controls
                        (t/f) Show buttons to set thumbnail or remove from
                              collection. Default: false.
    .fetch_selector     (str) Selector to call from controller, on subsequent
                              actions (i.e. on page switch). Default: 'fetch'.
]]--

-- set defaults

if data.show_author == nil then data.show_author = true end
if data.fetch_selector == nil then data.fetch_selector = 'fetch' end
if data.page_number == nil then data.page_number = 1 end
data.items_per_page = data.items_per_page or 5
data.items_per_row = data.items_per_row or 5
data.item_type = data.item_type or 'project'
data.num_pages = data.num_pages or 0
if items == nil then items = {} end

%>

<link rel="stylesheet" href="static/style/project.css">
<div class="<%= data.class %> container">
    <script>
    function loader (element) {
        var list = element.closest('div.container').querySelector('.list');
        list.innerHTML = `<div class="loader">
            <i class="fa fa-spinner fa-spin fa-3x" aria-hidden="true"></i>
            </div>`;
    };
    function change_page_<%= component.id %>(element, offset, data) {
        loader(element);
        update_<%=component.id%>(
            '<%=component.controller%>',
            'change_page',
            {
                offset: offset,
                data: data
            }
        );
    };
    </script>

<% if ((data.num_pages > 0) or data.show_if_empty) then %>
    <% if (data.title) then %>
    <h2 class="<%= data.class %> header" localizable>
        <%= data.title %>
    </h2>
    <% end %>
    <div class="bar">
        <% if data.with_search then %>
        <div class="<%= data.class %> search">
            <form onsubmit="
                event.preventDefault();
                update_<%=component.id%>(
                    '<%= component.controller %>',
                    'search',
                    {
                        search_term:
                            Object.fromEntries(new FormData(this)).query,
                        data: '<%= package.loaded.util.to_json(data) %>'
                    }
                );"
            >
                <input type="text" name="query">
                <i class="fas fa-search"></i>
            </form>
        </div>
        <% if data.search_term then %>
        <span class="search-term">Matching: <em><%= data.search_term %></em></span>
        <% end %>
        <% end -- show search bar, if requested %>
        <% if data.filters then for _, filter in ipairs(data.filters) do %>
                <div class="filter <%= filter.selector %>"><%= filter.label %>:
                    <select name="<%= filter.selector %>">
                        <% for _, option in pairs(filter.options) do %>
                        <option value="<%= option.value %>"><%= option.label %></option>
                        <% end %>
                    </select>
                </div>
        <% end end  -- filters %>

        <nav class="paginator">
            <a class="clickable" onclick="change_page_<%= component.id %>(this, 'first', '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-caret-left"></i></a>
            <a class="clickable" onclick="change_page_<%= component.id %>(this, -5, '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-angle-double-left"></i></a>
            <a class="clickable" onclick="change_page_<%= component.id %>(this, -1, '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-angle-left"></i></a>
            <span class="page"><%= data.page_number %></span> / <span class="total-pages"><%= data.num_pages %></span>
            <a class="clickable" onclick="change_page_<%= component.id %>(this, 1, '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-angle-right"></i></a>
            <a class="clickable" onclick="change_page_<%= component.id %>(this, 5, '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-angle-double-right"></i></a>
            <a class="clickable" onclick="change_page_<%= component.id %>(this, 'last', '<%= package.loaded.util.to_json(data) %>');"><i class="fas fa-caret-right"></i></a>
        </nav>
    </div>

    <% if (data.num_pages > 0) then %>
    <div class="<%= data.class %> list pure-g">
        <% for _, item in pairs(items) do %>
            <%
                render(
                    'views.partials.' .. data.item_type,
                    {
                        item = item,
                        items_per_row = data.items_per_row,
                        show_author = data.show_author,
                        show_icons = data.show_icons,
                        show_collection_controls =
                            data.show_collection_controls
                    }
                )
            %>
        <% end %>
    </div>
    <% end -- show items, if there are any %>
<% end -- show if empty %>
    <script>
        update_<%=component.id%>(
            '<%= component.controller %>',
            '<%= data.fetch_selector %>',
            { data: '<%- package.loaded.util.to_json(data) %>'}
        );
    </script>
</div>
